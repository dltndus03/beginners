{"ast":null,"code":"var _jsxFileName = \"/Users/leesooyeon/Documents/react/beginners/src/routes/Detail.js\",\n  _s = $RefreshSig$();\nimport { useCallback, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Detail() {\n  _s();\n  const {\n    id\n  } = useParams(); //url에 있는 값을 반환해주는 함수(:id)\n  const [loading, setLoading] = useState(true);\n  const [movie, setMovie] = useState();\n  const getMovie = useCallback(async () => {\n    const json = await (await fetch(`https://yts.mx/api/v2/movie_details.json?movie_id=${id}`)).json();\n    console.log(json);\n    setMovie(json.data.movie);\n    setLoading(false);\n  }, [id]);\n  useEffect(() => {\n    getMovie();\n  }, [getMovie]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: loading ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 26\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: movie.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 48\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 10\n  }, this);\n}\n_s(Detail, \"b81faUA11Hgfsu8Zk8AC80hFjnY=\", false, function () {\n  return [useParams];\n});\n_c = Detail;\nexport default Detail;\nvar _c;\n$RefreshReg$(_c, \"Detail\");","map":{"version":3,"names":["useCallback","useEffect","useState","useParams","jsxDEV","_jsxDEV","Detail","_s","id","loading","setLoading","movie","setMovie","getMovie","json","fetch","console","log","data","children","fileName","_jsxFileName","lineNumber","columnNumber","title","_c","$RefreshReg$"],"sources":["/Users/leesooyeon/Documents/react/beginners/src/routes/Detail.js"],"sourcesContent":["import { useCallback, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nfunction Detail() {\n  const { id } = useParams(); //url에 있는 값을 반환해주는 함수(:id)\n  const [loading, setLoading] = useState(true);\n  const [movie, setMovie] = useState();\n  const getMovie = useCallback(async () => {\n    const json = await (\n      await fetch(`https://yts.mx/api/v2/movie_details.json?movie_id=${id}`)\n    ).json();\n    console.log(json);\n    setMovie(json.data.movie);\n    setLoading(false);\n  }, [id]);\n  useEffect(() => {\n    getMovie();\n  }, [getMovie]);\n  return <div>{loading ? <h1>Loading...</h1> : <div>{movie.title}</div>}</div>;\n}\n\nexport default Detail;\n"],"mappings":";;AAAA,SAASA,WAAW,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACxD,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC7C,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAM;IAAEC;EAAG,CAAC,GAAGL,SAAS,EAAE,CAAC,CAAC;EAC5B,MAAM,CAACM,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,EAAE;EACpC,MAAMW,QAAQ,GAAGb,WAAW,CAAC,YAAY;IACvC,MAAMc,IAAI,GAAG,MAAM,CACjB,MAAMC,KAAK,CAAE,qDAAoDP,EAAG,EAAC,CAAC,EACtEM,IAAI,EAAE;IACRE,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;IACjBF,QAAQ,CAACE,IAAI,CAACI,IAAI,CAACP,KAAK,CAAC;IACzBD,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC,EAAE,CAACF,EAAE,CAAC,CAAC;EACRP,SAAS,CAAC,MAAM;IACdY,QAAQ,EAAE;EACZ,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;EACd,oBAAOR,OAAA;IAAAc,QAAA,EAAMV,OAAO,gBAAGJ,OAAA;MAAAc,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,gBAAGlB,OAAA;MAAAc,QAAA,EAAMR,KAAK,CAACa;IAAK;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAO;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAO;AAC9E;AAAChB,EAAA,CAhBQD,MAAM;EAAA,QACEH,SAAS;AAAA;AAAAsB,EAAA,GADjBnB,MAAM;AAkBf,eAAeA,MAAM;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}